@startuml Airline_Management_System_Simplified

' ==================== Styling Configuration ====================
skinparam classAttributeIconSize 0
skinparam linetype ortho
skinparam backgroundColor #FEFEFE
skinparam roundcorner 10
skinparam shadowing false
skinparam nodesep 50
skinparam ranksep 50
skinparam minClassWidth 50

' Class styling
skinparam class {
  BackgroundColor<<Abstract>> #E8F5E9
  BackgroundColor<<Singleton>> #E3F2FD
  BackgroundColor<<Entity>> #F3E5F5
  BackgroundColor<<Controller>> #FFE0B2
  BackgroundColor<<Utility>> #E0F2F1
  BackgroundColor<<Builder>> #FFF9C4
  BorderColor #424242
  ArrowColor #616161
  FontName Arial
  FontSize 9
}

' Entry Point
class AirlineManagementSystem <<Singleton>> <<Controller>>

' User Management
abstract class User <<Abstract>>
class Administrator <<Entity>>
class BookingAgent <<Entity>>
class Passenger <<Entity>>
class UsersManager <<Singleton>> <<Controller>>

' Aircraft Management
class Aircraft <<Entity>>
class AircraftCreator <<Builder>>
class AircraftManager <<Singleton>> <<Controller>>
class Maintenance <<Singleton>> <<Controller>>

' Crew Management
class Crew <<Entity>>
class CrewManager <<Singleton>> <<Controller>>

' Flight Management
class SeatMap <<Utility>>
class Flight <<Entity>>
class FlightCreator <<Builder>>
class FlightManager <<Singleton>> <<Controller>>

' Reservation Management
class Reservation <<Entity>>
class ReservationManager <<Singleton>> <<Controller>>

' Utils
class Database <<Utility>>
class UserInterface <<Utility>>

' Reporting
class ReportGenerator <<Controller>>

' Relationships
Administrator --|> User
BookingAgent --|> User
Passenger --|> User

UsersManager --> User : creates

AircraftCreator --> Aircraft : creates
AircraftManager --> Aircraft : manages
AircraftManager --> AircraftCreator : uses
AircraftManager --> Maintenance : coordinates

CrewManager --> Crew : manages

FlightCreator --> Flight : creates
FlightCreator --> SeatMap : uses
FlightManager --> Flight : manages
FlightManager --> FlightCreator : uses
FlightManager --> SeatMap : uses

ReservationManager --> Reservation : manages

AirlineManagementSystem --> UsersManager : uses
AirlineManagementSystem --> Administrator : delegates
AirlineManagementSystem --> BookingAgent : delegates
AirlineManagementSystem --> Passenger : delegates

Administrator --> AircraftManager : accesses
Administrator --> FlightManager : accesses
Administrator --> CrewManager : accesses
Administrator --> ReservationManager : accesses
Administrator --> ReportGenerator : uses

BookingAgent --> FlightManager : accesses
BookingAgent --> ReservationManager : accesses
BookingAgent --> UsersManager : creates passengers

Passenger --> FlightManager : accesses
Passenger --> ReservationManager : accesses

FlightManager --> AircraftManager : queries aircraft
FlightManager --> CrewManager : assigns crew

ReservationManager --> FlightManager : reserves seats

ReportGenerator --> FlightManager : queries
ReportGenerator --> ReservationManager : queries
ReportGenerator --> CrewManager : queries
ReportGenerator --> AircraftManager : queries
ReportGenerator --> Maintenance : queries

@enduml